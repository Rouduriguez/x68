Deux points A (xA,yA) et B (xB,yB)

PRINT_LIGNES_GRILLE :

	Lignes verticales :
	On initialise A = (0,0) et B = (0, xMax) avec xMax la taille de la grille
	On trace une ligne entre les deux points. 
	Tant qu'on n'a pas le nombre de lignes souhaité, on augmente de la largeur d'une case les abscisses de nos deux points : 
		--> A = (xA + LC, 0) et B = (xB + LC, xMax) et on trace une nouvelle ligne.

	Même principe pour les lignes horizontales :
	On initialise A = (0,0) et B = (xMax,0) puis A = (0, yA + LC) et B = (xMax, yB + LC)
	
COULEUR_GRILLE :
	On parcours la grille case par case, de gauche à droite de haut en bas.
	Avec deux points A et B qui sont respectivement le coin supérieur gauche et le coin inférieur droit de la case.
	On initialise A = (0,0) et B = (LC, LC) avec LC la largeur d'une case.
	On trace un rectangle plein, puis on augmente les abscisses de nos deux points.
		--> A = (xA + LC, yA) et B = (xB + LC, yB) et on trace une nouvelle ligne.
	On continue jusqu'à ce qu'on atteigne l'extrémité droite de la grille.
	Puis on réalise un "retour à la ligne" : A = (0, yA + LC) et B = (LC, yB + LC).
	On reproduit l'idée tant que la grille n'est pas entièrement colorée.	

Hésitation entre deux formats de grille :
	- Séparer chaque caractère dans la chaine avec des 0, pour afficher les nombres avec DRAW_STRING 
		ex:'B',0,'2',0,'B',0,'1',0,'0',0,'1',0,'3',0,'2',0, '2',0,'0',0,'0',0,'1',0,'B',0,'1',0,'0',0,'0',0,'1',0,'1',0,'1',0,'0',0,'0',0,'0',0,'0',0,'0',0,'0',0
	- Une chaine simple et indiquer le nombre de bombes avec un code couleur
		ex: 'B10001211001B100111B0B000'
	Je décide de travailler sur ce dernier format pour l'instant, ça me parait plus simple.

Génération "aléatoire" de grille : 
	Avantage : 
		- rejouabilité quasi infinie
	Inconvénients:
		- c'est facile de placer les bombes, mais placer les nombres l'est beaucoup moins.
		- doit prendre en compte chaque bordure et chaque coin pour l'incrémentation : 
			si une bombe est placée au centre, on doit ++ toutes les cases adjacentes, 
			Alors qu'au coin milieu de la bordure gauche, on ne ++ pas les cases à gauche car celles-ci sont sur la droite de la grille

	Si on ne génère pas aléatoirement, peut-être prévoir un certain nombre de grilles, et on en séléctionne une au hasard pour la partie en cours.

Problème majeur (environ 6h pour le résoudre) : la partie se termine instantanément (victoire) après le 1er clic sur une case qui n'est pas une bombe
	Cela n'arrive pas en mode débuggage, donc incompréhension. Après de nombreux, nombreux essais en isolé, puis en intégration, on en déduit que lors d'un simple clic
	d'un point de vue humain, la machine en capte une multitude, ce qui diminue très rapidement le compteur à zero.
	Pour y remédier, soit on change la couleur de la case jouée. Puis quand on clique sur une case, on vérifie la couleur et on ignore le clic si nécessaire.
	Essayé, pas réussi.
	Sinon, un "tableau de booléens" de longueur le nombre de cases. Toutes les valeurs étant initialisées à 0, si on clique sur la case i alors t[i] = 1.
	Donc lors des vérifications avant de rentrer dans les calculs, si t[i] = 1 alors on ignore le clic et on retourne au départ.
